{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brad\\\\Desktop\\\\Projects\\\\spotify\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    token\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = '';\n    let _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists\n        });\n      });\n      spotify.getPlaylist('37i9dQZEVXcDKwfS1dfIel?gtm=1').then(response => dispatch({\n        type: 'SET_DISCOVER_WEEKLY',\n        discover_weekly: response\n      }));\n      spotify.getMyTopArtists().then(response => dispatch({\n        type: 'SET_TOP_ARTISTS',\n        top_artists: response\n      }));\n      dispatch({\n        type: 'SET_SPOTIFY',\n        spotify: spotify\n      });\n    }\n  }, [token, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VvoLkVsyndhTBJCVSbrCRx/YQrA=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Brad/Desktop/Projects/spotify/src/App.js"],"names":["React","useEffect","Login","getTokenFromUrl","SpotifyWebApi","Player","useDataLayerValue","spotify","App","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","user","getUserPlaylists","playlists","getPlaylist","response","discover_weekly","getMyTopArtists","top_artists"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,MAAMC,OAAO,GAAG,IAAIH,aAAJ,EAAhB;;AAEA,SAASI,GAAT,GAAe;AAAA;;AACb,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAYC,QAAZ,IAAwBJ,iBAAiB,EAA/C;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,IAAI,GAAGR,eAAe,EAA5B;AACAS,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,QAAIG,MAAM,GAAGH,IAAI,CAACI,YAAlB;;AAEA,QAAID,MAAJ,EAAY;AAEVJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPP,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAKAP,MAAAA,OAAO,CAACU,cAAR,CAAuBH,MAAvB;AACAP,MAAAA,OAAO,CAACW,KAAR,GAAgBC,IAAhB,CAAsBC,IAAD,IAAU;AAE7BV,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,UADC;AAEPI,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OAND;AAOAb,MAAAA,OAAO,CAACc,gBAAR,GAA2BF,IAA3B,CAAiCG,SAAD,IAAe;AAC7CZ,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,eADC;AAEPM,UAAAA,SAAS,EAAEA;AAFJ,SAAD,CAAR;AAID,OALD;AAOAf,MAAAA,OAAO,CAACgB,WAAR,CAAoB,8BAApB,EAAoDJ,IAApD,CAAyDK,QAAQ,IAC/Dd,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,qBADC;AAEPS,QAAAA,eAAe,EAAED;AAFV,OAAD,CADV;AAMAjB,MAAAA,OAAO,CAACmB,eAAR,GAA0BP,IAA1B,CAAgCK,QAAD,IAC7Bd,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,iBADC;AAEPW,QAAAA,WAAW,EAAEH;AAFN,OAAD,CADV;AAMAd,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,aADC;AAEPT,QAAAA,OAAO,EAAEA;AAFF,OAAD,CAAR;AAKD;AACF,GA7CQ,EA6CN,CAACE,KAAD,EAAOC,QAAP,CA7CM,CAAT;AAgDA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGD,KAAK,gBACJ,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,YADI,gBAEF,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA3DQC,G;UACuBF,iB;;;KADvBE,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useDataLayerValue();\n\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = '';\n    let _token = hash.access_token\n\n    if (_token) {\n     \n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists,\n        });\n      });\n    \n      spotify.getPlaylist('37i9dQZEVXcDKwfS1dfIel?gtm=1').then(response => \n        dispatch({\n          type: 'SET_DISCOVER_WEEKLY',\n          discover_weekly: response,\n        }))\n\n      spotify.getMyTopArtists().then((response) => \n        dispatch({\n          type: 'SET_TOP_ARTISTS',\n          top_artists: response,\n        }))\n\n      dispatch({\n        type: 'SET_SPOTIFY',\n        spotify: spotify,\n      });\n    \n    }\n  }, [token,dispatch]);\n\n\n  return (\n    <div className=\"App\">\n      {token ?  \n        <Player spotify={spotify} />\n        : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}