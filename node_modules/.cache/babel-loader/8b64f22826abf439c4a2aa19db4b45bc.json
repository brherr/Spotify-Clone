{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brad\\\\Desktop\\\\Projects\\\\spotify\\\\src\\\\Body.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Body.css';\nimport SongRow from './SongRow';\nimport { useDataLayerValue } from './DataLayer';\nimport Header from './Header';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Body(_ref) {\n  _s();\n\n  let {\n    spotify\n  } = _ref;\n  const [{\n    discover_weekly\n  }, dispatch] = useDataLayerValue();\n\n  const playPlaylist = id => {\n    spotify.play({\n      context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`\n    }).then(res => {\n      spotify.getMyCurrentPlayingTrack().then(r => {\n        dispatch({\n          type: \"SET_ITEM\",\n          item: r.item\n        });\n        dispatch({\n          type: \"SET_PLAYING\",\n          playing: true\n        });\n      });\n    });\n  };\n\n  const playSong = id => {\n    spotify.play({\n      uris: [`spotify:track:${id}`]\n    }).then(res => {\n      spotify.getMyCurrentPlayingTrack().then(r => {\n        dispatch({\n          type: \"SET_ITEM\",\n          item: r.item\n        });\n        dispatch({\n          type: \"SET_PLAYING\",\n          playing: true\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.images[0].url,\n        alt: \"Discover Weekly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__infoText\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"PLAYLIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Discover Weekly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__songs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__icons\",\n        children: [/*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {\n          className: \"body__shuffle\",\n          onClick: playPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MoreHorizIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.tracks.items.map(item => /*#__PURE__*/_jsxDEV(SongRow, {\n        playSong: playSong,\n        track: item.track\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Body, \"aJtvf5xpGhk+gV7Pf9ixGsYXuWU=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["C:/Users/Brad/Desktop/Projects/spotify/src/Body.js"],"names":["React","SongRow","useDataLayerValue","Header","PlayCircleFilledIcon","FavoriteIcon","MoreHorizIcon","Body","spotify","discover_weekly","dispatch","playPlaylist","id","play","context_uri","then","res","getMyCurrentPlayingTrack","r","type","item","playing","playSong","uris","images","url","description","tracks","items","map","track"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Body.css';\r\nimport SongRow from './SongRow';\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport Header from './Header';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nfunction Body({ spotify }) {\r\n    const [{ discover_weekly }, dispatch] = useDataLayerValue();\r\n\r\n    const playPlaylist = (id) => {\r\n        spotify\r\n          .play({\r\n            context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\r\n          })\r\n          .then((res) => {\r\n            spotify.getMyCurrentPlayingTrack().then((r) => {\r\n              dispatch({\r\n                type: \"SET_ITEM\",\r\n                item: r.item,\r\n              });\r\n              dispatch({\r\n                type: \"SET_PLAYING\",\r\n                playing: true,\r\n              });\r\n            });\r\n          });\r\n      };\r\n\r\n      const playSong = (id) => {\r\n        spotify\r\n          .play({\r\n            uris: [`spotify:track:${id}`],\r\n          })\r\n          .then((res) => {\r\n            spotify.getMyCurrentPlayingTrack().then((r) => {\r\n              dispatch({\r\n                type: \"SET_ITEM\",\r\n                item: r.item,\r\n              });\r\n              dispatch({\r\n                type: \"SET_PLAYING\",\r\n                playing: true,\r\n              });\r\n            });\r\n          });\r\n      };\r\n\r\n    return (\r\n        <div className='body'>\r\n            <Header spotify={spotify} />\r\n\r\n            <div className='body__info'>\r\n                <img src={discover_weekly?.images[0].url} alt='Discover Weekly'/>\r\n                <div className='body__infoText'>\r\n                    <strong>PLAYLIST</strong>\r\n                    <h2>Discover Weekly</h2>\r\n                    <p>{discover_weekly?.description}</p>\r\n                </div> \r\n            </div>        \r\n\r\n                <div className='body__songs'>\r\n                    <div className='body__icons'>\r\n                        <PlayCircleFilledIcon className='body__shuffle' onClick={playPlaylist} />\r\n                        <FavoriteIcon fontSize='large' />\r\n                        <MoreHorizIcon />\r\n                    </div>\r\n                    {discover_weekly?.tracks.items.map((item)=> (\r\n                        <SongRow playSong={playSong} track={item.track} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n           \r\n    );\r\n}\r\n\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}